syntax = "proto3";
package test.v1;

import "google/protobuf/any.proto";
import "buf/validate/validate.proto";
import "validate/validate.proto";
import "protoconf/v1/protoconf.proto";

message TestMessage {
    string stringValue = 1;
    google.protobuf.Any any_field = 3;
    repeated google.protobuf.Any any_repeated = 4;
    map<string,google.protobuf.Any> any_map = 5;
    AnotherMessageWithEnum enum_field = 6;
    MessageWithEnum enum_field_internal = 7;
    ValidateMe validate_me = 8;
    MessageWithSubMessage sub_message = 9;
}

message AnotherMessageWithEnum {
    enum AnotherTestEnum {
        ZERO = 0;
        ONE = 1;
        TWO = 2;
    }
    AnotherTestEnum e = 1;
}

message MessageWithEnum {
    enum TestEnum {
        ZERO = 0;
        ONE = 1;
        TWO = 2;
    }
    TestEnum e = 1;
}

enum TopLevelEnum {
    ZERO = 0;
    ONE = 1;
    TWO = 2;
}

message MessageWithExternalEnum {
    TopLevelEnum e = 1;
}

message ValidateMe {
    string notempty = 1;
    map<string, string> validate_map = 2;
    TestMessage nested = 3;
    repeated string repeated_string = 4;
}

message MessageWithSubMessage {
    message SubMessage {
        string value = 1;
    }

    SubMessage sub = 1;
}

message BufValidate {
    string email = 1 [(buf.validate.field).string.email = true];
}

message LegacyBufValidate {
    string email = 1 [(validate.rules).string.email = true];
}

service TestService {
    rpc PutTestMessage(TestMessage) returns (protoconf.v1.ConfigMutationResponse);
    rpc PutValidateMe(ValidateMe) returns (protoconf.v1.ConfigMutationResponse);
}
