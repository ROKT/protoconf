--- store/consul/consul.go	2019-07-13 17:49:12.335874020 +0000
+++ store/consul/consul.go	2019-07-13 17:48:50.359900990 +0000
@@ -278,6 +278,18 @@
 // be used to stop watching.
 func (s *Consul) Watch(key string, stopCh <-chan struct{}) (<-chan *store.KVPair, error) {
 	kv := s.client.KV()
+	opts := &api.QueryOptions{WaitTime: DefaultWatchWaitTime}
+
+	// Get the key
+	pair, meta, err := kv.Get(key, opts)
+	if err != nil {
+		return nil, err
+	}
+
+	if pair == nil {
+		return nil, errors.New("missing key")
+	}
+
 	watchCh := make(chan *store.KVPair)
 
 	go func() {
@@ -285,7 +297,6 @@
 
 		// Use a wait time in order to check if we should quit
 		// from time to time.
-		opts := &api.QueryOptions{WaitTime: DefaultWatchWaitTime}
 
 		for {
 			// Check if we should quit
@@ -295,12 +306,6 @@
 			default:
 			}
 
-			// Get the key
-			pair, meta, err := kv.Get(key, opts)
-			if err != nil {
-				return
-			}
-
 			// If LastIndex didn't change then it means `Get` returned
 			// because of the WaitTime and the key didn't changed.
 			if opts.WaitIndex == meta.LastIndex {
@@ -317,6 +322,12 @@
 					LastIndex: pair.ModifyIndex,
 				}
 			}
+
+			// Get the key
+			pair, meta, err = kv.Get(key, opts)
+			if err != nil {
+				return
+			}
 		}
 	}()
 
